swagger: "2.0"
info:
  version: "0.0.1"
  title: Movie DB
# during dev, should point to your local machine
host: localhost:8081
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /movies:
    # binds a127 app logic to a route
    x-swagger-router-controller: movies
    get:
      description: Returns a list of stored movies data
      # used as the method name of the controller
      operationId: index
      parameters:
        - name: genre
          in: query
          description: filters movie by genre
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MovieListBody"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Creates a new movie entry
      # used as the method name of the controller
      operationId: create
      parameters:
        - name: movie
          required: true        
          in: body
          description: a new movie details
          schema: 
            $ref: "#/definitions/MovieBody"
      responses:
        "200":
          description: Successfully stored movie details
          schema:
            # a pointer to a definition
            $ref: "#/definitions/MovieBody"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /movies/{movieId}:
    x-swagger-router-controller: movies
    get:
      description: Returns a single movie entry by given id
      operationId: show
      parameters:
        - name: movieId
          required: true
          in: path
          type: string
      responses:
        "200":
          description: single movie details
          schema:
            $ref: "#/definitions/MovieBody"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
    put:
      description: Updates a movie entry by given Id
      operationId: update
      parameters:
        - name: movieId
          required: true
          in: path
          type: string
        - name: movie
          required: true
          in: body
          description: an updated movie details
          schema:
            $ref: "#/definitions/MovieBody"
      responses:
        "200":
          description: a successfully updated movie details
          schema: 
            $ref: "#/definitions/MovieBody"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
    delete:
      description: Deletes a single movie entry by given id
      operationId: destroy
      parameters:
        - name: movieId
          required: true
          in: path
          type: string
      responses:
        "200":
          description: a deleted movie detail
          schema:
            $ref: "#/definitions/MovieBody"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
   
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  MovieListBody:
    required:
       - movies
    properties:
      movies:
       type: array
       items:
         $ref: "#/definitions/Movie"
       
  Movie:
     required:
       - title
       - genre
       - year
     properties:
        title:
          type: string
        genre:
          type: string
        year:
          type: integer
          minimum: 1990
        rank:
          type: integer
          default: 5
          minimum: 1
          maximum: 10
          
  MovieBody:
    required:
      - movie
    properties:
      movie:
       $ref: "#/definitions/Movie"
        
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
